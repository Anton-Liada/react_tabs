{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["getTab","tabs","tabId","find","id","Tabs","selectedTabId","onTabSelected","content","className","map","title","classNames","onClick","handleClick","href","App","useState","selectedTab","setSelectedTab","tab","ReactDOM","render","document","getElementById"],"mappings":"8LASMA,EAAS,SAACC,EAAaC,GAC3B,OAAOD,EAAKE,MAAK,qBAAGC,KAAgBF,MAAUD,EAAK,IAGxCI,EAAwB,SAAC,GAI/B,IAHLJ,EAGI,EAHJA,KACAK,EAEI,EAFJA,cACAC,EACI,EADJA,cAEA,EAA+BP,EAAOC,EAAMK,GAAhCJ,EAAZ,EAAQE,GAAWI,EAAnB,EAAmBA,QAQnB,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,gBAAGN,EAAH,EAAGA,GAAIO,EAAP,EAAOA,MAAP,OAER,aADA,CACA,MAEEF,UAAWG,IACT,CACE,YAAaR,IAAOF,IAGxB,UAAQ,MACRW,QAAS,kBApBD,SAACT,GACfA,IAAOF,GACTK,EAAcP,EAAOC,EAAMG,IAkBJU,CAAYV,IAR7B,SAUE,mBAAGW,KAAI,WAAMX,GAAM,UAAQ,UAA3B,SACGO,KAVEP,UAiBb,qBAAKK,UAAU,QAAQ,UAAQ,aAA/B,SACGD,QC5CIP,G,kBAAO,CAClB,CAAEG,GAAI,QAASO,MAAO,QAASH,QAAS,eACxC,CAAEJ,GAAI,QAASO,MAAO,QAASH,QAAS,eACxC,CAAEJ,GAAI,QAASO,MAAO,QAASH,QAAS,iBAG7BQ,EAAgB,WAC3B,MAAsCC,mBAAShB,EAAK,IAApD,mBAAOiB,EAAP,KAAoBC,EAApB,KACQf,EAAcc,EAAdd,GAAIO,EAAUO,EAAVP,MAMZ,OACE,sBAAKF,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBE,KAGtB,cAAC,EAAD,CACEV,KAAMA,EACNK,cAAeF,EACfG,cAbY,SAACa,GACjBD,EAAeC,UCfnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4245562e.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nconst getTab = (tabs: Tab[], tabId: string) => {\n  return tabs.find(({ id }) => id === tabId) || tabs[0];\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const { id: tabId, content } = getTab(tabs, selectedTabId);\n\n  const handleClick = (id: string) => {\n    if (id !== tabId) {\n      onTabSelected(getTab(tabs, id));\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(({ id, title }) => (\n            // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions\n            <li\n              key={id}\n              className={classNames(\n                {\n                  'is-active': id === tabId,\n                },\n              )}\n              data-cy=\"Tab\"\n              onClick={() => handleClick(id)}\n            >\n              <a href={`#${id}`} data-cy=\"TabLink\">\n                {title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {content}\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n  const { id, title } = selectedTab;\n\n  const handleTab = (tab: Tab) => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={id}\n        onTabSelected={handleTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}